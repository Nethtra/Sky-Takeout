<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.DishMapper">
    <!--将插入的数据的主键返回给属性id  是直接返回给了对象 Dish dish  然后在Service里操作-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into dish
        (name, category_id, price, image, description, status, create_time, update_time, create_user, update_user)
        values (#{name}, #{categoryId}, #{price}, #{image}, #{description}, #{status}, #{createTime}, #{updateTime},
                #{createUser}, #{updateUser})

    </insert>


    <!--注意sql的写法 外连接查询  然后因为category表中的种类名也叫name，会和dish中的重复 所以需要起别名与VO中的属性对应  要不会封装失败-->
    <select id="pageQuery" resultType="com.sky.vo.DishVO">
        select dish.*,category.name category_name from dish left join category on dish.category_id=category.id
        <where>
            <if test="name!=null">
                dish.name like concat('%',#{name},'%')
            </if>
            <if test="categoryId!=null">
                and category_id=#{categoryId}
            </if>
            <if test="status!=null">
                and status=#{status}
            </if>
        </where>
        order by update_time desc
    </select>

    <delete id="deleteByIds">
        delete
        from dish
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>


    <update id="update">
        update dish
        <set>
            <if test="name!=null">
                name=#{name},
            </if>
            <if test="categoryId!=null">
                category_id=#{categoryId},
            </if>
            <if test="price!=null">
                price=#{price},
            </if>
            <if test="image!=null">
                image=#{image},
            </if>
            <if test="description!=null">
                description=#{description},
            </if>
            <if test="status!=null">
                status=#{status},
            </if>
            <if test="updateTime!=null">
                update_time=#{updateTime},
            </if>
            <if test="updateUser!=null">
                update_user=#{updateUser},
            </if>
            <if test="createTime!=null">
                create_time=#{createTime},
            </if>
            <if test="createUser!=null">
                create_user=#{createUser}
            </if>
        </set>
        where id=#{id}
    </update>
</mapper>